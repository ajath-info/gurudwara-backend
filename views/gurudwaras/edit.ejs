<div class="space-y-6 p-6">
    <div class="flex items-center justify-between">
        <div>
            <h1 class="text-2xl font-bold text-gray-900">Edit Gurudwara</h1>
            <p class="text-gray-600">Update gurudwara details</p>
        </div>
        <a href="/admin/gurudwaras" class="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors duration-200 flex items-center space-x-2">
            <i class="fas fa-arrow-left h-4 w-4"></i>
            <span>Back to Gurudwaras</span>
        </a>
    </div>

    <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
        <form action="/admin/gurudwaras/<%= gurudwara.id %>/edit" method="POST" enctype="multipart/form-data" class="space-y-6">
            <div>
                <label for="name" class="block text-sm font-medium text-gray-700 mb-2">
                    Gurudwara Name <span class="text-red-500">*</span>
                </label>
                <input
                    type="text"
                    name="name"
                    id="name"
                    value="<%= gurudwara.name %>"
                    placeholder="Enter gurudwara name"
                    class="mt-1 block w-full border border-gray-300 rounded-lg py-2 px-3 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200"
                    required
                />
            </div>

            <div>
                <label for="address" class="block text-sm font-medium text-gray-700 mb-2">
                    Address <span class="text-red-500">*</span>
                </label>
                <textarea
                    name="address"
                    id="address"
                    placeholder="Enter complete address of the gurudwara"
                    class="mt-1 block w-full border border-gray-300 rounded-lg py-2 px-3 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200"
                    rows="4"
                    required
                ><%= gurudwara.address %></textarea>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <label for="latitude" class="block text-sm font-medium text-gray-700 mb-2">
                        Latitude
                        <span class="text-gray-500 text-xs">(optional)</span>
                    </label>
                    <input
                        type="number"
                        step="any"
                        name="latitude"
                        id="latitude"
                        value="<%= gurudwara.latitude || '' %>"
                        placeholder="e.g., 28.6139"
                        class="mt-1 block w-full border border-gray-300 rounded-lg py-2 px-3 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200"
                    />
                </div>
                <div>
                    <label for="longitude" class="block text-sm font-medium text-gray-700 mb-2">
                        Longitude
                        <span class="text-gray-500 text-xs">(optional)</span>
                    </label>
                    <input
                        type="number"
                        step="any"
                        name="longitude"
                        id="longitude"
                        value="<%= gurudwara.longitude || '' %>"
                        placeholder="e.g., 77.2090"
                        class="mt-1 block w-full border border-gray-300 rounded-lg py-2 px-3 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200"
                    />
                </div>
            </div>

            <div>
                <label for="status" class="block text-sm font-medium text-gray-700 mb-2">Status</label>
                <select
                    name="status"
                    id="status"
                    class="mt-1 block w-full border border-gray-300 rounded-lg py-2 px-3 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200"
                >
                    <option value="1" <%= gurudwara.status === '1' ? 'selected' : '' %>>Active</option>
                    <option value="2" <%= gurudwara.status === '2' ? 'selected' : '' %>>Inactive</option>
                </select>
            </div>

            <!-- Existing Images Section -->
            <% if (gurudwara.image_urls && JSON.parse(gurudwara.image_urls).length > 0) { %>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Current Images</label>
                    <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 p-4 bg-gray-50 rounded-lg">
                        <% JSON.parse(gurudwara.image_urls).forEach((url, index) => { %>
                            <div class="relative group">
                                <img src="<%= url %>" alt="Gurudwara Image <%= index + 1 %>" class="w-full h-24 object-cover rounded-lg border border-gray-200" />
                                <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 rounded-lg transition-all duration-200 flex items-center justify-center">
                                    <button type="button" onclick="removeExistingImage('<%= url %>')" class="text-white bg-red-500 hover:bg-red-600 rounded-full p-1 opacity-0 group-hover:opacity-100 transition-opacity duration-200">
                                        <i class="fas fa-trash h-3 w-3"></i>
                                    </button>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                    <div class="mt-2 flex items-center space-x-2">
                        <input type="checkbox" id="keep_existing" name="keep_existing_images" value="true" checked class="rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                        <label for="keep_existing" class="text-sm text-gray-600">Keep existing images</label>
                    </div>
                </div>
            <% } %>

            <!-- New Images Upload Section -->
            <div>
                <label for="images" class="block text-sm font-medium text-gray-700 mb-2">
                    Upload New Images
                    <span class="text-gray-500 text-xs">(optional - you can upload multiple images)</span>
                </label>
                <div class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-lg hover:border-blue-400 transition-colors duration-200">
                    <div class="space-y-1 text-center">
                        <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48" aria-hidden="true">
                            <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                        <div class="flex text-sm text-gray-600">
                            <label for="images" class="relative cursor-pointer bg-white rounded-md font-medium text-blue-600 hover:text-blue-500 focus-within:outline-none">
                                <span>Upload new images</span>
                                <input
                                    type="file"
                                    name="images"
                                    id="images"
                                    multiple
                                    accept="image/*"
                                    class="sr-only"
                                />
                            </label>
                            <p class="pl-1">or drag and drop</p>
                        </div>
                        <p class="text-xs text-gray-500">PNG, JPG, GIF up to 10MB each</p>
                    </div>
                </div>
                <div id="image-preview" class="mt-3 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 hidden"></div>
            </div>

            <div class="bg-gray-50 rounded-lg p-4">
                <h3 class="text-sm font-medium text-gray-700 mb-2">ðŸ“‹ Update Information:</h3>
                <ul class="text-sm text-gray-600 space-y-1">
                    <li>â€¢ Gurudwara name and address are required</li>
                    <li>â€¢ Coordinates are optional but helpful for mapping</li>
                    <li>â€¢ Existing images will be kept unless unchecked</li>
                    <li>â€¢ New images will be added to existing ones</li>
                    <li>â€¢ QR code will remain the same</li>
                </ul>
            </div>

            <div class="flex justify-end space-x-3 pt-4 border-t border-gray-200">
                <a href="/admin/gurudwaras" class="px-6 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 text-gray-700 transition-colors duration-200 flex items-center space-x-2">
                    <i class="fas fa-times h-4 w-4"></i>
                    <span>Cancel</span>
                </a>
                <button type="submit" class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200 flex items-center space-x-2">
                    <i class="fas fa-save h-4 w-4"></i>
                    <span>Update Gurudwara</span>
                </button>
            </div>
        </form>
    </div>
</div>

<script>
// Image preview functionality for new uploads
document.getElementById('images').addEventListener('change', function(e) {
    const files = e.target.files;
    const previewContainer = document.getElementById('image-preview');
    
    if (files.length > 0) {
        previewContainer.innerHTML = '';
        previewContainer.classList.remove('hidden');
        
        Array.from(files).forEach((file, index) => {
            const reader = new FileReader();
            reader.onload = function(e) {
                const div = document.createElement('div');
                div.className = 'relative group';
                div.innerHTML = `
                    <img src="${e.target.result}" alt="New Image ${index + 1}" class="w-full h-24 object-cover rounded-lg border border-gray-200">
                    <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 rounded-lg transition-all duration-200 flex items-center justify-center">
                        <span class="text-white text-xs opacity-0 group-hover:opacity-100">${file.name}</span>
                    </div>
                    <div class="absolute top-1 right-1">
                        <span class="bg-green-500 text-white text-xs px-1 py-0.5 rounded">NEW</span>
                    </div>
                `;
                previewContainer.appendChild(div);
            };
            reader.readAsDataURL(file);
        });
    } else {
        previewContainer.classList.add('hidden');
    }
});

// Remove existing image functionality (visual only - actual removal handled by server)
function removeExistingImage(imageUrl) {
    if (confirm('Are you sure you want to remove this image? This action cannot be undone.')) {
        // Find and hide the image element
        const imageElements = document.querySelectorAll('img[src="' + imageUrl + '"]');
        imageElements.forEach(img => {
            const container = img.closest('.relative');
            if (container) {
                container.style.opacity = '0.3';
                container.innerHTML += '<div class="absolute inset-0 flex items-center justify-center bg-red-500 bg-opacity-80 rounded-lg"><span class="text-white text-xs font-medium">MARKED FOR REMOVAL</span></div>';
            }
        });
        
        // Add hidden input to track removed images
        const form = document.querySelector('form');
        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'remove_images[]';
        hiddenInput.value = imageUrl;
        form.appendChild(hiddenInput);
        
        // Uncheck keep existing images
        const keepExistingCheckbox = document.getElementById('keep_existing');
        if (keepExistingCheckbox) {
            keepExistingCheckbox.checked = false;
        }
    }
}

// Form validation
document.querySelector('form').addEventListener('submit', function(e) {
    const name = document.getElementById('name').value.trim();
    const address = document.getElementById('address').value.trim();
    
    if (!name || !address) {
        e.preventDefault();
        alert('Please fill in all required fields (Name and Address).');
        return false;
    }
    
    const latitude = document.getElementById('latitude').value;
    const longitude = document.getElementById('longitude').value;
    
    // If one coordinate is provided, both should be provided
    if ((latitude && !longitude) || (!latitude && longitude)) {
        e.preventDefault();
        alert('Please provide both latitude and longitude coordinates or leave both empty.');
        return false;
    }
    
    // Show loading state
    const submitBtn = document.querySelector('button[type="submit"]');
    const originalText = submitBtn.innerHTML;
    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin h-4 w-4"></i> <span>Updating...</span>';
    submitBtn.disabled = true;
    
    // Re-enable if form submission fails
    setTimeout(() => {
        submitBtn.innerHTML = originalText;
        submitBtn.disabled = false;
    }, 10000);
});

// Auto-resize textarea
document.getElementById('address').addEventListener('input', function() {
    this.style.height = 'auto';
    this.style.height = (this.scrollHeight) + 'px';
});

// Toggle keep existing images functionality
document.getElementById('keep_existing')?.addEventListener('change', function() {
    const existingImages = document.querySelectorAll('.relative.group img[src*="/uploads/gurudwaras/"]');
    existingImages.forEach(img => {
        const container = img.closest('.relative');
        if (this.checked) {
            container.style.opacity = '1';
            // Remove any "marked for removal" overlays
            const overlay = container.querySelector('.absolute.inset-0.bg-red-500');
            if (overlay) overlay.remove();
        } else {
            container.style.opacity = '0.6';
        }
    });
});

// File size validation before preview
document.getElementById('images').addEventListener('change', function(e) {
    const files = Array.from(e.target.files);
    const maxSize = 10 * 1024 * 1024; // 10MB
    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];
    
    for (let file of files) {
        if (file.size > maxSize) {
            alert(`File "${file.name}" is too large. Maximum size is 10MB.`);
            this.value = '';
            document.getElementById('image-preview').classList.add('hidden');
            return;
        }
        
        if (!allowedTypes.includes(file.type)) {
            alert(`File "${file.name}" is not a valid image type. Please use JPEG, PNG, GIF, or WebP.`);
            this.value = '';
            document.getElementById('image-preview').classList.add('hidden');
            return;
        }
    }
});
</script>